@model VideoGameAPI_Example.ViewModels.GameViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    @*<div class="gameTitle">*@
        <h2 class="col-md-7" id="gameName"></h2>
        <h2 class="col-md-4">Total Rating: <span id="gameRating"></span>%</h2>
    @*</div>*@
</div>

<div class="row">
    
    <img src="" id="gameCover" class="col-md-3 col-sm-6 col-xs-6"/>
    
    <div class="details col-md-8 col-sm-6 col-xs-12">
        <p>
            <strong>Genres:</strong> <span id="gameGenres"></span><br />
        </p>
        <p>
            <strong>Platforms:</strong> <span id="gamePlatforms"></span><br />
        </p>
        <p>
            <strong>Summary:</strong> <span id="gameSummary"></span>
        </p>
        <p>
            <button class="btn btn-primary btn-default" onclick="window.history.back()">
                Back
            </button>
        </p>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            // store a list of genres and platforms
            var genreList = @Html.Raw(Model.GenresJSON.ToString());
            var platformList = @Html.Raw(Model.PlatformsJSON.ToString());

            //use ajax to grab the requested game
            var platforms;
            var genres;

            $.ajax({
                url: "/Api/Game",
                method: "GET",
                data: {'Id': @Model.Id }
            })
            .catch(function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 400) {
                    msg = 'Bad request error. [400]';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                }
                alert(msg);
                window.history.back();
            })
            .done(function (response) {
                $("#gameName").html(response.name);
                $("#gameRating").html(parseFloat(response.totalRating).toFixed(2));
                $("#gameSummary").html(response.summary);

                // get a larger image by pulling the 'cover_big' url
                var imageSrc = response.coverUrl;
                imageSrc = String(imageSrc).replace("t_thumb", "t_cover_big");
                $("#gameCover").attr("src", imageSrc);

                genres = eval(response.genres);
                //console.log("genres : " + genres);
                displayResponseList("#gameGenres", genreList, genres);

                platforms = eval(response.platforms);
                //console.log("platforms : " + platforms);
                displayResponseList("#gamePlatforms", platformList, platforms);
             });


            function displayResponseList(id, itemList, gameResponseList) {
                var text = "";

                itemList.forEach(function (item) {

                    if (!gameResponseList) return;

                    if (gameResponseList.includes(item.Id)) {
                        text += item.Name + ", ";
                    }
                })

                // remove the last comma and space
                if (text.length > 0) {
                    text = text.substr(0, text.length - 2);
                }

                $(id).html(text);

                return;
            }
        })
    </script>

    @Scripts.Render("~/bundles/site")
}

